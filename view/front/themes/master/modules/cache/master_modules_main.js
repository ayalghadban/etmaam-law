$(function () { 'use strict';$(document).on('click', '.blogLike', function () {let like = $(this).data('vote');let url = $(this).data('url');let id = $(this).data('id');let $this = $(this);$(this).transition('scaleOut', { duration: 800, complete: function () {$this.replaceWith('<i class="icon check"></i>');$.post(url + 'blog/action/', { action: 'like', id: id, type: like}, function (json) { if (json.status === 'success') {Cookies.set('BLOG_voted', id, { expires: 120, path: '/'}); }}, 'json'); }}); });});(function ($, window, document, undefined) { "use strict"; const pluginName = "Comments", defaults = {url: "",murl: "" }; function Comments(element, options) {this.element = element;this.settings = $.extend({}, defaults, options);this._defaults = defaults;this._name = pluginName;this.init(); } $.extend(Comments.prototype, {init: function () { this.bind();},bind: function () { const base = this;$(this.element).on('click', 'a.down, a.up', function () {const type = $(this).attr('class').replace("item ", "");const id = $(this).data('id');const icon = $(this).children('.icon');const score = $(this).children('span');const down = $(this).data('down');const up = $(this).data('up');icon.removeClass("chevron up down").addClass("check").fadeIn(200);$(this).removeClass("up down");$.post(base.settings.url + 'action/', { action: "vote", type: type, id: id}, function (json) { if (json.status === "success") {if (json.type === "down") { score.text(parseInt(down) - 1);} else { score.text(parseInt(up) + 1);} }}, "json"); });$(this.element).on('click', 'a.replay', function () {$("#replyform, #pError").remove();const id = $(this).data('id');$.get(base.settings.url + 'action/', { action: "load", id: id}, function (json) { if (json.status === "success") {const comment = $("#comment_" + id, base.element).children('.content');comment.append(json.html);$("#replyform").fadeIn(); }}, "json"); });$(this.element).on('click', 'button[name=doReply]', function () {const id = $(this).closest('.comment').data('id');$(this).addClass('loading').prop('disabled', true);const data = { id: id, parent_id: $("input[name=parent_id]").val(), section: $("input[name=section]").val(), message: $("textarea[name=replybody]").val(), username: $("input[name=replayname]").val(), url: $("input[name=url]").val(), action: "reply"};base.submitComment(data); });$(document).on('click', 'button[name=doComment]', function () {$(this).addClass('loading').prop('disabled', true);let data = { id: 0, parent_id: $("input[name=parent_id]").val(), section: $("input[name=section]").val(), message: $("textarea[name=body]").val(), username: $("input[name=name]").val(), captcha: $("input[name=captcha]").val(), star: $("input[name=star]:checked").val(), url: $("input[name=url]").val(), action: "comment"};base.submitComment(data); });$(this.element).on('click', 'a.delete', function () {let id = $(this).closest('.comment').data('id');$.post(base.settings.url + 'action/', { action: "delete", id: id}, function () { let comment = $("#comment_" + id, base.element); $(comment).fadeOut();}); });$(document).on('keyup paste', '#combody, #replybody', function () {let characters = $(this).attr('data-counter');if ($(this).val().length > characters) { $(this).val($(this).val().substr(0, characters));}let id = $(this).attr('id');let remaining = characters - $(this).val().length;let $cs = $("." + id + "_counter span");$cs.html(remaining);if (remaining <= 10) { $cs.addClass('negative').removeClass('positive');} else { $cs.removeClass('negative').addClass('positive');} });},submitComment: function (data) { const base = this; $.post(this.settings.url + 'action/', data, function (json) {if (json.type === "success") { $("#replyform").remove(); if (json.html) {if (data.action === "reply") { $("#comment_" + data.id).children('.content').append(json.html);} else { $(base.element).find(".comments").prepend(json.html); console.log($(base.element)); $('html, body').animate({scrollTop: $(base.element).offset().top }, 500); $("#combody").val('');} }}$.wNotice({ autoclose: 12000, type: json.type, title: json.title, text: json.message});$("button[name=doReply], button[name=doComment]").removeClass('loading').prop('disabled', false); }, "json");} }); $.fn[pluginName] = function (options) {return this.each(function () { if (!$.data(this, pluginName)) {$.data(this, pluginName, new Comments(this, options)); }}); };})(jQuery, window, document);$(function () { 'use strict'; const $ds = $('#digishop'); const $cl = $('#cartList'); const $dco = $('#dCheckout');$ds.on('click', 'a.add-digishop', function () {let id = $(this).data('id');let button = $(this);let url = $ds.data('url');button.addClass('loading');$.post(url + 'digishop/action/', { action: 'add', id: id,}, function (json) { if (json.status === 'success') {$cl.html(json.html); } else {$.wNotice({ autoclose: 12000, type: json.type, title: json.title, text: 'Ooops, there was an error selecting this item.'}); } setTimeout(function () {button.removeClass('loading'); }, 1200);}, 'json'); });$cl.on('click', 'a.deleteItem', function () {let id = $(this).data('id');let item = $(this).closest('.item');let url = $cl.data('url');$.post(url + 'digishop/action/', { action: 'delete', id: id,}, function (json) { if (json.status === 'success') {item.transition('fadeOut', { duration: 300, complete: function () {$cl.html(json.html); }}); }}, 'json'); });$ds.on('click', '.digishopLike', function () {let id = $(this).attr('data-digishop-like');let total = $(this).attr('data-digishop-total');let score = $(this).parent().find('.likeTotal');let url = $ds.data('url');let $this = $(this);score.html(parseInt(total) + 1);$(this).transition('scaleOut', { duration: 800, complete: function () {$this.replaceWith('<i class="icon check"></i>');$.post(url + 'digishop/action/', { action: 'like', id: id}); }}); });$ds.on('change', 'input[name=gateway]', function () {let id = $(this).val();let url = $ds.data('url');$dco.addClass('loading');$.get(url + 'digishop/action/', { action: 'gateway', id: id}, function (json) { $dco.html(json.message); $('html,body').animate({scrollTop: $dco.offset().top }, 1000); $dco.removeClass('loading');}, 'json'); });});$(function () { 'use strict'; const $shop = $('#shop');$shop.on('click', 'a.add-shop', function () {let set = $(this).data('option');let id = set.id;let type = set.type;let button = $(this);let url = $('#shop').attr('data-url');button.addClass('loading');$.post(url + 'shop/action/', { action: 'add', id: id, type: type,}, function (json) { if (json.status === 'success') {if (type === 'simple') { $('#simpleCart span').html(json.html); $('#simpleCart').transition('shake');} else { $('#scartList').html(json.html);} } else {$.wNotice({ autoclose: 12000, type: json.status, title: json.title, text: json.message}); } setTimeout(function () {button.removeClass('loading'); }, 1200);}, 'json'); });$shop.on('click', 'a.add-shopv', function () {let set = $(this).data('option');let id = set.id;let type = set.type;let variant = set.variant;let url = $('#shop').attr('data-url');$.get(url + 'shop/action/', { action: 'variants', id: id, variant: variant}, function (json) { let $wmodal = $( '<div class="wojo big modal" id="cartModal"><div class="dialog" role="document"><div class="content">' + '<div class="body">' + json.html + '</div>' + '<div class="footer">' + '<button type="button" class="wojo small simple button" data="modal:close">Cancel</button>' + '<button type="button" class="wojo small positive button" data="modal:ok">OK</button>' + '</div></div></div>').on($.modal.OPEN, function () {$('#cartModal').on('click', '.add-var', function () { let variant = $(this); let parent = $(this).closest('.wojo.list'); parent.find('.add-var').removeClass('active'); variant.toggleClass('active');}); }).modal().on('click', '[data="modal:ok"]', function () {$(this).addClass('loading').prop('disabled', true);let active = $('#cartModal').find('.add-var.active').length;let ids = [];$('#cartModal .add-var.active').each(function () { ids.push($(this).attr('data-id'));});$.post(url + 'shop/action/', { action: 'addVariant', ids: ids, id: id, type: type, active: active}, function (jsonr) { if (jsonr.status === 'success') {if (type === 'simple') { $('#simpleCart span').html(jsonr.html);} else { $('#scartList').html(jsonr.html);}$('#cartModal').modal('hide'); } $.wNotice({autoclose: 12000,type: jsonr.status,title: jsonr.title,text: jsonr.message }); setTimeout(function () {$('[data="modal:ok"]', $wmodal).removeClass('loading').prop('disabled', false); }, 1200);}, 'json');$.modal.close(); }).on($.modal.AFTER_CLOSE, function () {$('#cartModal').remove(); });}, 'json'); });$('#scartList').on('click', 'a.deleteItem', function () {let id = $(this).data('id');let parent = $(this).closest('.item');let url = $('#scartList').attr('data-url');$.post(url + 'shop/action/', { action: 'remove', type: 'small', id: id,}, function (json) { if (json.status === 'success') {parent.transition('swoopOutTop', { duration: 400, complete: function () {$('#scartList').html(json.html); }}); }}, 'json'); });$shop.on('click', 'a.deleteCartItem', function () {let id = $(this).data('id');let url = $('#shop').attr('data-url');$.post(url + 'shop/action/', { action: 'remove', type: 'big', id: id,}, function (json) { if (json.status === 'success') {window.location.href = json.redirect; }}, 'json'); });$('#checkout').on('click', function () {if ($('input[name=\'shipping\']').is(':checked')) { window.location.href = $(this).data('url');} else { $('#sid .item').transition('shake');} });$shop.on('change', 'input[name="shipping"]', function () {let val = $(this).val();let id = $(this).attr('id').split('_').pop();let url = $('#shop').attr('data-url');$('input[name=gateway]:checked').prop('checked', false);$.post(url + 'shop/action/', { action: 'shipping', value: val, id: id,}, function (json) { if (json.status === 'success') {$('#shipping_c').text(json.shipping);$('#grand_c').text(json.grand); }}, 'json'); });$shop.on('change', 'select[name=qty]', function () {let id = $(this).data('id');let value = $(this).val();let parent = $(this).closest('.wojo.item');let url = $('#shop').attr('data-url');parent.addClass('loading');$.post(url + 'shop/action/', { action: 'qty', id: id, value: value,}, function (json) { if (json.status === 'success') {setTimeout(function () { $('body').transition({animation: 'scaleOut' }); window.location.href = json.redirect;}, 800); } else {$.wNotice({ autoclose: 12000, type: json.status, title: json.title, text: json.message}); }}, 'json'); });$shop.on('click', '.shopLike', function () {let id = $(this).attr('data-shop-like');let total = $(this).attr('data-shop-total');let score = $(this).parent().find('.likeTotal');let url = $('#shop').attr('action');let $this = $(this);score.html(parseInt(total) + 1);$(this).transition('scaleOut', { duration: 500, complete: function () {$this.replaceWith('<i class="icon check"></i>');$.post(url + 'shop/action/', { action: 'like', id: id}); }}); });$shop.on('click', '.add-shop-wish', function () {let $btn = $(this);let id = $btn.data('id');let url = $('#shop').attr('data-url');switch ($btn.data('layout')) { case 'list':$btn.children().addClass('positive spin spinner circles');break; default:$btn.children().addClass('spin spinner circles');break;}$.post(url + 'shop/action/', { action: 'wishlist', id: id,}, function (json) { if (json.type === 'error') {console.log('Invalid ID'); } setTimeout(function () {$btn.removeClass('add-shop-wish');$btn.children().removeClass('inverted spin spinner circles heart files');switch ($btn.data('layout')) { case 'list':$btn.children().addClass('positive check');break; default:$btn.children().addClass('check');break;} }, 500);}, 'json'); });$shop.on('click', '.removeWish', function () {let id = $(this).data('id');let url = $shop.data('url');let parent = $shop.find('tr#wishlist_' + id);$.post(url + 'shop/action/', { action: 'removeWish', id: id,}, function (json) { if (json.status === 'success') {parent.transition('scaleOut', { duration: 300, complete: function () {parent.remove(); }}); }}, 'json'); });$shop.on('change', 'input[name=gateway]', function () {const $sch = $('#shCheckout');let id = $(this).val();let url = $shop.attr('data-url');let isValid = true;$('#sCheckout input').each(function () { if ($.trim($(this).val()).length === 0) {isValid = false;$(this).closest('.fields').transition('shake'); }});if (isValid) { $.get(url + 'shop/action/', {action: 'gateway',id: id,address: $('#wojo_form').serialize() }, function (json) {$sch.html(json.message);$('html,body').animate({ scrollTop: $sch.offset().top}, 1000); }, 'json');} else { $('html,body').animate({scrollTop: $('#shop').offset().top }, 500); $('input[name=gateway]:checked').prop('checked', false);} });});